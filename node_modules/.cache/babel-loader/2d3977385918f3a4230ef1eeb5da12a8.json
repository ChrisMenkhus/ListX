{"ast":null,"code":"import _slicedToArray from \"/home/toad/Documents/react-projects/lists-but-cards/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/toad/Documents/react-projects/lists-but-cards/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, BackgroundImage, BigText, Navbar, Card, Button, InfoSelectorBar, InfoSelectorItem, SignUpForm, Img, Signup } from './components';\nimport { BrowserRouter as Router, Switch, Route, NavLink, Link, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Cookies from 'js-cookie';\nimport { Home, Lists, Login, Empty } from './pages';\nimport portalX_badge from './portalX_badge.png';\nconst Style = styled.div`\n  user-select: none;\n  \n  .bottomButton {\n    margin-top: 40px;\n    padding: 10px 50px 10px 50px;\n  }\n\n  .scrollContainer {\n    height: 100vh;\n    scroll-behavior: smooth;\n    overflow-y: scroll;\n    scroll-snap-type: y proximity;\n    .scrollItem {\n      scroll-snap-align: start;\n    }\n  }\n\n  footer {\n    background-color: #111;\n    .scrollItem {\n      margin-left: auto; margin-right: auto;      \n      padding-top: 10px;\n      padding-bottom: 10px;\n      width: 400px;\n    }\n    p {\n      font-size: 0.8rem;\n      color: white;\n      text-align: center;\n      line-height: 10px;\n    }\n    .email {\n      user-select: all;\n      color: #47FFC4;\n      text-decoration: underline;\n    }\n  }\n`;\n\nfunction App() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLogged = _useState2[0],\n        setLogged = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user_id = _useState4[0],\n        setUserId = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        redirect = _useState8[0],\n        setRedirect = _useState8[1];\n\n  const loadUser = user => {\n    setUserId(user.user_id);\n    setEmail(user.email);\n    Cookies.set('user_id', user.user_id);\n  };\n\n  const signIn = () => {\n    setLogged(true);\n  };\n\n  const signOut = () => {\n    setLogged(false);\n    setUserId('');\n    setEmail('');\n    Cookies.set('user_id', '');\n  };\n\n  const toHome = () => {\n    setRedirect('home');\n  };\n\n  const toLists = () => {\n    setRedirect('lists');\n  };\n\n  useEffect(() => {\n    const cookie_user_id = Cookies.get('user_id');\n\n    if (cookie_user_id.length > 0) {\n      setUserId(cookie_user_id);\n      signIn();\n      toLists();\n    }\n  }, []);\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Style, {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, redirect === 'home' ? React.createElement(Redirect, {\n    to: \"/\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }) : redirect === 'lists' ? React.createElement(Redirect, {\n    to: \"/lists\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }) : '', React.createElement(\"div\", {\n    className: \"scrollContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    className: \"scrollItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: portalX_badge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Link, {\n    className: \"left\",\n    to: \"/\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"List\", React.createElement(\"span\", {\n    className: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"X\")), React.createElement(Link, {\n    className: \"right\",\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Login\"))), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Home, {\n    signIn: signIn,\n    loadUser: loadUser,\n    toHome: toHome,\n    toLists: toLists,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/lists\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Lists, {\n    user_id: user_id,\n    isLogged: isLogged,\n    signIn: signIn,\n    loadUser: loadUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Empty, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/toad/Documents/react-projects/lists-but-cards/src/App.js"],"names":["React","useState","useEffect","Container","BackgroundImage","BigText","Navbar","Card","Button","InfoSelectorBar","InfoSelectorItem","SignUpForm","Img","Signup","BrowserRouter","Router","Switch","Route","NavLink","Link","Redirect","styled","Cookies","Home","Lists","Login","Empty","portalX_badge","Style","div","App","isLogged","setLogged","user_id","setUserId","email","setEmail","redirect","setRedirect","loadUser","user","set","signIn","signOut","toHome","toLists","cookie_user_id","get","length"],"mappings":"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","sourcesContent":["import React, {useState,  useEffect} from 'react'\nimport {Container, BackgroundImage, BigText, Navbar, Card, Button, InfoSelectorBar, InfoSelectorItem, SignUpForm, Img, Signup} from './components';\nimport {BrowserRouter as Router, Switch, Route, NavLink, Link, Redirect} from 'react-router-dom';\nimport styled from 'styled-components';\nimport Cookies from 'js-cookie'\nimport {Home, Lists, Login, Empty} from './pages'\nimport portalX_badge from './portalX_badge.png'\n\nconst Style = styled.div`\n  user-select: none;\n  \n  .bottomButton {\n    margin-top: 40px;\n    padding: 10px 50px 10px 50px;\n  }\n\n  .scrollContainer {\n    height: 100vh;\n    scroll-behavior: smooth;\n    overflow-y: scroll;\n    scroll-snap-type: y proximity;\n    .scrollItem {\n      scroll-snap-align: start;\n    }\n  }\n\n  footer {\n    background-color: #111;\n    .scrollItem {\n      margin-left: auto; margin-right: auto;      \n      padding-top: 10px;\n      padding-bottom: 10px;\n      width: 400px;\n    }\n    p {\n      font-size: 0.8rem;\n      color: white;\n      text-align: center;\n      line-height: 10px;\n    }\n    .email {\n      user-select: all;\n      color: #47FFC4;\n      text-decoration: underline;\n    }\n  }\n`;\n\nfunction App() {\n\n  const [isLogged, setLogged] = useState(false);\n  const [user_id, setUserId] = useState('');\n  const [email, setEmail] = useState('');\n  const [redirect, setRedirect] = useState('');\n \n  const loadUser = (user) => {\n    setUserId(user.user_id);\n    setEmail(user.email);\n    Cookies.set('user_id', user.user_id);\n  }\n\n  const signIn = () => {\n    setLogged(true);\n  }\n\n  const signOut = () => {\n    setLogged(false);\n    setUserId('');\n    setEmail('');\n    Cookies.set('user_id', '');\n  }\n\n  const toHome = () => {\n    setRedirect('home');\n  }\n\n  const toLists = () => {\n    setRedirect('lists');\n  }\n\n  useEffect(()=>{\n    const cookie_user_id = Cookies.get('user_id');\n    if (cookie_user_id.length > 0) {\n      setUserId(cookie_user_id);\n      signIn();\n      toLists();\n    }\n  },[])\n\n  return (\n    <Router>\n    <Style className=\"App\">\n      { redirect === 'home' ? <Redirect to='/' exact/> : \n      redirect === 'lists' ? <Redirect to ='/lists'/> : '' }\n      <div className='scrollContainer'>\n      <Navbar className='scrollItem'>\n        <img src={portalX_badge}/>\n        <Link className='left' to='/' exact>List<span className='blue'>X</span></Link>\n        <Link className='right' to='/login'>Login</Link>\n      </Navbar>\n      </div>\n\n\n\n      <Switch>\n        <Route path='/' exact>\n          <Home signIn={signIn} loadUser={loadUser} toHome={toHome} toLists={toLists}/>\n        </Route> \n        <Route path='/lists' >\n          <Lists user_id={user_id} isLogged={isLogged} signIn={signIn} loadUser={loadUser}/>\n        </Route>\n        <Route path='/login'>\n          <Empty/>\n          {/* <Login signIn={signIn} loadUser={loadUser} toHome={toHome} toLists={toLists}/> */}\n        </Route>\n      </Switch>\n    </Style>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}