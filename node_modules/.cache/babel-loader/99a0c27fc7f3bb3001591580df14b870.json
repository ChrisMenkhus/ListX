{"ast":null,"code":"import _slicedToArray from \"/home/toad/Documents/react-projects/lists-but-cards/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/toad/Documents/react-projects/lists-but-cards/src/pages/Page_Lists.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button } from '../components';\nimport styled from 'styled-components';\nimport Container from '../components/Container.js';\nimport { primary } from '../components/Colors.js';\nconst Style = styled.div`\n\tcolor: black;\n\n  h1 {\n    font-size: 1.2rem; margin: 0; padding: 0;\n    width: 80%;\n    border-bottom: 1px solid white;\n    margin-bottom: 10px;\n  }\n\n  p {\n    font-size: 1rem;\n    padding: 0px; margin: 4px;\n    text-align: left;\n    margin-right: auto;\n  }\n\n  input {\n    font-size: 1rem;\n    margin-bottom: 10px;\n  }\n\n  Button {\n    padding: 2px;\n    border-radius: 1px;\n    margin-bottom: 10px;\n    margin: 20px;\n  }\n\n  .list {\n    display: flex;\n    flex-direction: column;\n    padding: 4px;\n    width: 100%;\n    text-align: left;\n    .row {\n      display: flex;\n      flex-direction: row;\n      margin-bottom: 4px;\n    }\n\n    Button {      \n      margin-left: auto;\n      padding: 4px 12px 4px 12px; margin: 0px;\n      line-height: 24px;\n      margin-right: 2px;\n    }\n  }\n`;\n\nfunction Lists(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        itemsInlist = _useState2[0],\n        setItemsInlist = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lists = _useState4[0],\n        setLists = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newItemText = _useState6[0],\n        setNewItemText = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        newListText = _useState8[0],\n        setNewListText = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedList = _useState10[0],\n        setSelectedList = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        selectedListTitle = _useState12[0],\n        setSelectedListTitle = _useState12[1]; // 503c7d47-20ae-4e1d-9b24-05bcef36a06c\n\n\n  const createYourListsView = async () => {\n    fetch('http://localhost:3000/readlists', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: props.user_id\n      })\n    }).then(response => response.json()).then(res => {\n      console.log(res);\n      let newList = [];\n\n      if (res) {\n        //getData(res);\n        setLists(getData(res));\n      }\n    });\n  };\n\n  const getData = async res => {\n    return Promise.all(res.map(list => {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        key: list.list_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, list.title), React.createElement(Button, {\n        onClick: () => {\n          removeListFromYourLists(list.list_id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"x\"), React.createElement(Button, {\n        onClick: () => {\n          createSelectedListView(list.list_id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"\\uD83D\\uDC41\"));\n    }));\n  };\n\n  const createSelectedListView = listToView => {\n    fetch('http://localhost:3000/readlist', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        list_id: listToView\n      })\n    }).then(response => {\n      return response.json();\n    }).then(res => {\n      setSelectedList(res.list_id);\n      setSelectedListTitle(res.title);\n      console.log(res);\n      let newList = [];\n      if (res != null) if (res.list_entries) {\n        newList = res.list_entries.map(entry => {\n          return React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, entry), React.createElement(Button, {\n            onClick: () => {\n              removeItemFromList(listToView, entry);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, \"x\"));\n        });\n      }\n      setItemsInlist(newList);\n    });\n  };\n\n  const addListToYourLists = event => {\n    fetch('http://localhost:3000/createlist', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: props.user_id,\n        title: newListText\n      })\n    }).then(response => response.json()).then(res => {\n      console.log(res.list_id);\n      createSelectedListView(res.list_id);\n      createYourListsView();\n    });\n  };\n\n  const removeListFromYourLists = listToDelete => {\n    fetch('http://localhost:3000/deletelist', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        list_id: listToDelete\n      })\n    }).then(response => response.json()).then(res => {\n      console.log(res);\n    });\n    createYourListsView();\n  };\n\n  const addNewItemToList = (listToView, entry) => {\n    fetch('http://localhost:3000/updatelist', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        list_id: listToView,\n        entry: entry\n      })\n    }).then(response => response.json()).then(res => {\n      console.log(res);\n      createSelectedListView(listToView);\n    });\n  };\n\n  const removeItemFromList = (listToView, entry) => {\n    fetch('http://localhost:3000/updatelist', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        list_id: listToView,\n        entry: entry,\n        deleteEntry: true\n      })\n    }).then(response => response.json()).then(res => {\n      console.log(res.list_entries);\n      createSelectedListView(listToView);\n    });\n  };\n\n  const initialPropA = useRef(createYourListsView);\n  const initialPropB = useRef(props.user_id);\n  useEffect(() => {}, []);\n  return React.createElement(Style, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, props.isLogged ? React.createElement(Container, {\n    margin: \"0px\",\n    flexdirection: \"row\",\n    height: \"70vh\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"myLists\",\n    margin: \"20px auto\",\n    bg: primary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Your Lists\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Create new list\"), React.createElement(Container, {\n    flexdirection: \"row\",\n    margin: \"0px\",\n    padding: \"0px\",\n    bg: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => {\n      setNewListText(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => {\n      addListToYourLists();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"Create\")), React.createElement(\"div\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, lists)), React.createElement(Container, {\n    className: \"selectedListContainer\",\n    margin: \"20px auto\",\n    bg: primary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, selectedListTitle.length ? selectedListTitle : 'Selected List'), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Add new item\"), React.createElement(Container, {\n    flexdirection: \"row\",\n    margin: \"0px\",\n    padding: \"0px\",\n    bg: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => {\n      setNewItemText(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => {\n      addNewItemToList(selectedList, newItemText);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Add\")), React.createElement(\"div\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, itemsInlist))) : React.createElement(Container, {\n    margin: \"0px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(Container, {\n    bg: primary,\n    margin: \"20px\",\n    width: \"400px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"Sign up\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Keep your lists stored on an account so you never lose them!\"), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"Create an Account\")), React.createElement(Container, {\n    bg: primary,\n    margin: \"20px\",\n    width: \"400px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"Continue as Guest\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, \"Create lists right now but your lists wont be saved for long.\"), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, \"Login as Guest\"))));\n}\n\nexport default Lists;","map":{"version":3,"sources":["/home/toad/Documents/react-projects/lists-but-cards/src/pages/Page_Lists.js"],"names":["React","useState","useEffect","useRef","Button","styled","Container","primary","Style","div","Lists","props","itemsInlist","setItemsInlist","lists","setLists","newItemText","setNewItemText","newListText","setNewListText","selectedList","setSelectedList","selectedListTitle","setSelectedListTitle","createYourListsView","fetch","method","headers","body","JSON","stringify","user_id","then","response","json","res","console","log","newList","getData","Promise","all","map","list","list_id","title","removeListFromYourLists","createSelectedListView","listToView","list_entries","entry","removeItemFromList","addListToYourLists","event","listToDelete","addNewItemToList","deleteEntry","initialPropA","initialPropB","isLogged","e","target","value","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport {Button} from '../components'\nimport styled from 'styled-components'\nimport Container from '../components/Container.js'\nimport {primary} from '../components/Colors.js'\n\nconst Style = styled.div`\n\tcolor: black;\n\n  h1 {\n    font-size: 1.2rem; margin: 0; padding: 0;\n    width: 80%;\n    border-bottom: 1px solid white;\n    margin-bottom: 10px;\n  }\n\n  p {\n    font-size: 1rem;\n    padding: 0px; margin: 4px;\n    text-align: left;\n    margin-right: auto;\n  }\n\n  input {\n    font-size: 1rem;\n    margin-bottom: 10px;\n  }\n\n  Button {\n    padding: 2px;\n    border-radius: 1px;\n    margin-bottom: 10px;\n    margin: 20px;\n  }\n\n  .list {\n    display: flex;\n    flex-direction: column;\n    padding: 4px;\n    width: 100%;\n    text-align: left;\n    .row {\n      display: flex;\n      flex-direction: row;\n      margin-bottom: 4px;\n    }\n\n    Button {      \n      margin-left: auto;\n      padding: 4px 12px 4px 12px; margin: 0px;\n      line-height: 24px;\n      margin-right: 2px;\n    }\n  }\n`;\n\nfunction Lists(props) {\n  const [itemsInlist, setItemsInlist] = useState('');\n  const [lists, setLists] = useState('');\n  const [newItemText, setNewItemText] = useState('');\n  const [newListText, setNewListText] = useState('');\n  const [selectedList, setSelectedList] = useState('');\n  const [selectedListTitle, setSelectedListTitle] = useState('');\n  // 503c7d47-20ae-4e1d-9b24-05bcef36a06c\n\n  const createYourListsView = async () => {\n  fetch('http://localhost:3000/readlists', {\n    method: 'post',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n      user_id: props.user_id,\n    })\n  })\n  .then(response => response.json())\n  .then(res => {\n    console.log(res);\n    let newList = [];\n    if (res) {\n      //getData(res);\n      setLists(getData(res)); \n    }\n    })  \n  };\n\n  const getData = async (res) => {\n      return Promise.all(res.map((list) => {\n        return (\n          <div className='row' key={list.list_id}>\n            <p>{list.title}</p>\n            <Button onClick={()=>{\n              removeListFromYourLists(list.list_id);\n              }\n              }>x</Button>\n            <Button onClick={()=>{\n              createSelectedListView(list.list_id)}\n              }>👁</Button>\n          </div> \n        )\n      }))\n  }\n\n  const createSelectedListView = (listToView) => { \n  fetch('http://localhost:3000/readlist', {\n    method: 'post',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n      list_id: listToView\n    })\n  })\n  .then(response => {return response.json()})\n  .then(res => {\n    setSelectedList(res.list_id);\n    setSelectedListTitle(res.title);\n    console.log(res);\n    let newList = [];\n    if (res != null)\n    if (res.list_entries) {\n      newList = res.list_entries.map((entry) => {\n        return (\n          <div className='row'>\n            <p>{entry}</p>\n            <Button onClick={()=>{removeItemFromList(listToView, entry)}}>x</Button>\n          </div> \n        )\n      })\n    } \n\n    setItemsInlist(newList);  \n    })  \n  };\n\n  const addListToYourLists = event => {\n  fetch('http://localhost:3000/createlist', {\n    method: 'post',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n      user_id: props.user_id,\n      title: newListText\n    })\n  })\n  .then(response => response.json())\n  .then(res => {\n     console.log(res.list_id);\n     createSelectedListView(res.list_id);\n     createYourListsView(); \n  })  \n  };\n\n  const removeListFromYourLists = (listToDelete) => {\n  fetch('http://localhost:3000/deletelist', {\n    method: 'post',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n      list_id: listToDelete\n    })\n  })\n  .then(response => response.json())\n  .then(res => {\n    console.log(res);\n  })    \n    createYourListsView();\n  }\n  \n\n  const addNewItemToList = (listToView, entry) => {\n  fetch('http://localhost:3000/updatelist', {\n    method: 'post',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n      list_id: listToView,\n      entry: entry\n    })\n  })\n  .then(response => response.json())\n  .then(res => {\n     console.log(res);\n     createSelectedListView(listToView);\n  })  \n  };\n\n  const removeItemFromList = (listToView, entry) => {\n  fetch('http://localhost:3000/updatelist', {\n    method: 'post',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n      list_id: listToView,\n      entry: entry,\n      deleteEntry: true\n    })\n  })\n  .then(response => response.json())\n  .then(res => {\n    console.log(res.list_entries);\n    createSelectedListView(listToView);\n  })    \n  };\n\n  const initialPropA = useRef(createYourListsView);\n  const initialPropB = useRef(props.user_id);\n\n  useEffect(() => {\n\n  }, []);\n\n  return (\n    <Style>\n      {props.isLogged ? \n        <Container margin='0px' flexdirection='row' height='70vh'>\n\n          <Container className='myLists' margin='20px auto' bg={primary}>\n            <h1>Your Lists</h1>\n            <p>Create new list</p> \n            <Container flexdirection='row' margin='0px' padding='0px' bg='none'>\n              <input type='text' onChange={(e)=>{setNewListText(e.target.value)}} />\n            <Button onClick={()=>{ addListToYourLists() }}>Create</Button>\n            </Container>\n            <div className='list'>\n              {lists}\n            </div>\n          </Container>\n\n\n          <Container className='selectedListContainer' margin='20px auto' bg={primary}>\n            <h1>{selectedListTitle.length ? selectedListTitle : 'Selected List'}</h1>\n            <p>Add new item</p>\n            <Container flexdirection='row' margin='0px' padding='0px' bg='none'>\n              <input type='text' onChange={(e)=>{setNewItemText(e.target.value)}} />\n          \t<Button onClick={()=>{\n              addNewItemToList(selectedList,newItemText)\n              }}>Add</Button>\n            </Container>\n            <div className='list'>\n              {itemsInlist}\n            </div>\n          </Container>\n\n        </Container>\n      :\n        <Container margin='0px'>\n          <Container bg={primary} margin='20px' width='400px'>\n            <h1>Sign up</h1>\n            <p>Keep your lists stored on an account so you never lose them!</p>\n            <Button>Create an Account</Button>\n          </Container>\n          <Container bg={primary} margin='20px' width='400px'>\n            <h1>Continue as Guest</h1>\n            <p>Create lists right now but your lists wont be saved for long.</p>\n            <Button>Login as Guest</Button>\n          </Container>\n        </Container>\n      }\n    </Style>\n  );\n}\nexport default Lists;\n"]},"metadata":{},"sourceType":"module"}