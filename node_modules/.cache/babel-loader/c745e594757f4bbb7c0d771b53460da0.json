{"ast":null,"code":"import _slicedToArray from \"/home/toad/Documents/react-projects/lists-but-cards/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/toad/Documents/react-projects/lists-but-cards/src/pages/Page_Lists.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, ListCard } from '../components';\nimport styled from 'styled-components';\nimport Container from '../components/Container.js';\nimport { primary } from '../components/Colors.js';\nconst Style = styled.div`\n\tcolor: black;\n\n  height: auto;\n\n\n\n  Button {\n    padding: 20px;\n    border-radius: 1px;\n    margin-bottom: 10px;\n    margin: 20px;\n  }\n\n  h3 {\n    font-size: 3rem;\n    border-bottom: 4px solid #333;\n    color: #222;\n    margin: 0px; padding: 0px;\n    margin-top: 10px;\n  }\n\n  .list {\n    display: flex;\n    flex-direction: column;\n    padding: 4px;\n    width: 100%;\n    text-align: left;\n    .row {\n   \n    }\n\n    Button {      \n      margin-left: auto;\n      padding: 4px 12px 4px 12px; margin: 0px;\n      line-height: 24px;\n      margin-right: 2px;\n    }\n  }\n`;\n\nfunction Lists(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        itemsInlist = _useState2[0],\n        setItemsInlist = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lists = _useState4[0],\n        setLists = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newItemText = _useState6[0],\n        setNewItemText = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        newListText = _useState8[0],\n        setNewListText = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedList = _useState10[0],\n        setSelectedList = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        selectedListTitle = _useState12[0],\n        setSelectedListTitle = _useState12[1]; // 503c7d47-20ae-4e1d-9b24-05bcef36a06c\n\n\n  const createYourListsView = async () => {\n    fetch('http://localhost:3000/readlists', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: props.user_id\n      })\n    }).then(response => response.json()).then(res => {\n      if (res) {\n        getJSXfromLists(res).then(data => {\n          setLists(data);\n        });\n      }\n    });\n  };\n\n  const getJSXfromLists = async res => {\n    return res.map(list => {\n      return React.createElement(ListCard, {\n        key: list.list_id,\n        bg: \"#6CFF82\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, list.title)), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: () => {\n          removeListFromYourLists(list.list_id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"x\"), React.createElement(Button, {\n        onClick: () => {\n          createSelectedListView(list.list_id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"\\uD83D\\uDC41\")));\n    });\n  };\n\n  const createSelectedListView = listToView => {\n    fetch('http://localhost:3000/readlist', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        list_id: listToView\n      })\n    }).then(response => response.json()).then(res => {\n      setSelectedList(res.list_id);\n      setSelectedListTitle(res.title);\n      let newList = [];\n      if (res != null) if (res.list_entries) {\n        newList = res.list_entries.map((entry, i) => {\n          return React.createElement(ListCard, {\n            key: entry + i,\n            bg: \"#6CFF82\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, entry)), React.createElement(\"div\", {\n            className: \"buttons\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, React.createElement(Button, {\n            onClick: () => {\n              removeItemFromList(listToView, entry);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, \"x\")));\n        });\n      }\n      setItemsInlist(newList);\n    });\n  };\n\n  const addListToYourLists = event => {\n    fetch('http://localhost:3000/createlist', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: props.user_id,\n        title: newListText\n      })\n    }).then(response => response.json()).then(res => {\n      createSelectedListView(res.list_id);\n      createYourListsView();\n    });\n  };\n\n  const removeListFromYourLists = listToDelete => {\n    fetch('http://localhost:3000/deletelist', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        list_id: listToDelete\n      })\n    }).then(response => response.json()).then(res => {\n      createYourListsView();\n      console.log(res);\n    });\n  };\n\n  const addNewItemToList = (listToView, entry) => {\n    fetch('http://localhost:3000/updatelist', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        list_id: listToView,\n        entry: entry\n      })\n    }).then(response => response.json()).then(res => {\n      console.log(res);\n      createSelectedListView(listToView);\n    });\n  };\n\n  const removeItemFromList = (listToView, entry) => {\n    fetch('http://localhost:3000/updatelist', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        list_id: listToView,\n        entry: entry,\n        deleteEntry: true\n      })\n    }).then(response => response.json()).then(res => {\n      console.log(res.list_entries);\n      createSelectedListView(listToView);\n    });\n  };\n\n  useEffect(() => {\n    createYourListsView();\n  }, [props.user_id]);\n  return React.createElement(Style, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, props.isLogged ? React.createElement(Container, {\n    margin: \"0px\",\n    flexdirection: \"row\",\n    height: \"70vh\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(Container, {\n    flexdirection: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(ListCard, {\n    bg: '#47F7FF',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Create new list\")), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(Container, {\n    flexdirection: \"column\",\n    margin: \"0px\",\n    padding: \"0px\",\n    bg: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"title\",\n    onChange: e => {\n      setNewListText(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => {\n      addListToYourLists();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Create\")))), lists), React.createElement(Container, {\n    flexdirection: \"column\",\n    bg: \"transparent\",\n    padding: \"0px\",\n    margin: \"20px\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, selectedListTitle ? selectedListTitle : 'select a list'), React.createElement(Container, {\n    flexdirection: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(ListCard, {\n    bg: '#47F7FF',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Add new item\")), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, selectedListTitle.length <= 0 ? React.createElement(Container, {\n    flexdirection: \"column\",\n    margin: \"0px\",\n    padding: \"0px\",\n    bg: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"Select a list first\")) : React.createElement(Container, {\n    flexdirection: \"column\",\n    margin: \"0px\",\n    padding: \"0px\",\n    bg: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"title\",\n    onChange: e => {\n      setNewItemText(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => {\n      addNewItemToList(selectedList, newItemText);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"Create\")))), itemsInlist))) : React.createElement(Redirect, {\n    to: \"/\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }));\n}\n\nexport default Lists;","map":{"version":3,"sources":["/home/toad/Documents/react-projects/lists-but-cards/src/pages/Page_Lists.js"],"names":["React","useState","useEffect","useRef","Redirect","Button","ListCard","styled","Container","primary","Style","div","Lists","props","itemsInlist","setItemsInlist","lists","setLists","newItemText","setNewItemText","newListText","setNewListText","selectedList","setSelectedList","selectedListTitle","setSelectedListTitle","createYourListsView","fetch","method","headers","body","JSON","stringify","user_id","then","response","json","res","getJSXfromLists","data","map","list","list_id","title","removeListFromYourLists","createSelectedListView","listToView","newList","list_entries","entry","i","removeItemFromList","addListToYourLists","event","listToDelete","console","log","addNewItemToList","deleteEntry","isLogged","e","target","value","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {Button, ListCard} from '../components'\nimport styled from 'styled-components'\nimport Container from '../components/Container.js'\nimport {primary} from '../components/Colors.js'\n\nconst Style = styled.div`\n\tcolor: black;\n\n  height: auto;\n\n\n\n  Button {\n    padding: 20px;\n    border-radius: 1px;\n    margin-bottom: 10px;\n    margin: 20px;\n  }\n\n  h3 {\n    font-size: 3rem;\n    border-bottom: 4px solid #333;\n    color: #222;\n    margin: 0px; padding: 0px;\n    margin-top: 10px;\n  }\n\n  .list {\n    display: flex;\n    flex-direction: column;\n    padding: 4px;\n    width: 100%;\n    text-align: left;\n    .row {\n   \n    }\n\n    Button {      \n      margin-left: auto;\n      padding: 4px 12px 4px 12px; margin: 0px;\n      line-height: 24px;\n      margin-right: 2px;\n    }\n  }\n`;\n\nfunction Lists(props) {\n  const [itemsInlist, setItemsInlist] = useState('');\n  const [lists, setLists] = useState('');\n  const [newItemText, setNewItemText] = useState('');\n  const [newListText, setNewListText] = useState('');\n  const [selectedList, setSelectedList] = useState('');\n  const [selectedListTitle, setSelectedListTitle] = useState('');\n  // 503c7d47-20ae-4e1d-9b24-05bcef36a06c\n\n  const createYourListsView = async () => {\n  fetch('http://localhost:3000/readlists', {\n    method: 'post',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n      user_id: props.user_id,\n    })\n  })\n  .then(response => response.json())\n  .then(res => {\n    if (res) {\n      getJSXfromLists(res).then(data => {\n        setLists(data); \n      })\n    }\n    })  \n  };\n\n  const getJSXfromLists = async (res) => {\n      return (res.map( (list) => {\n        return (\n          <ListCard key={list.list_id} bg='#6CFF82'>\n            <div className='content'>\n              <h1>{list.title}</h1>\n              \n            </div>\n            <div className='buttons'>\n              <Button onClick={()=>{removeListFromYourLists(list.list_id);}}>x</Button>\n              <Button onClick={()=>{createSelectedListView(list.list_id)}}>👁</Button>              \n            </div>\n          </ListCard>\n        )\n      }))\n  }\n\n  const createSelectedListView = (listToView) => { \n  fetch('http://localhost:3000/readlist', {\n    method: 'post',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n      list_id: listToView\n    })\n  })\n  .then(response => response.json())\n  .then(res => {\n    setSelectedList(res.list_id);\n    setSelectedListTitle(res.title);\n    \n    let newList = [];\n    if (res != null)\n    if (res.list_entries) {\n      newList = res.list_entries.map((entry, i) => {\n        return (\n          <ListCard key={entry + i} bg='#6CFF82'>\n            <div className='content'>\n              <h1>{entry}</h1>              \n            </div>\n            <div className='buttons'>\n              <Button onClick={()=>{removeItemFromList(listToView, entry)}}>x</Button>           \n            </div>\n          </ListCard> \n        )\n      })\n    } \n\n    setItemsInlist(newList);  \n    })  \n  };\n\n  const addListToYourLists = event => {\n  fetch('http://localhost:3000/createlist', {\n    method: 'post',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n      user_id: props.user_id,\n      title: newListText\n    })\n  })\n  .then(response => response.json())\n  .then(res => {    \n     createSelectedListView(res.list_id);\n     createYourListsView(); \n  })  \n  };\n\n  const removeListFromYourLists = (listToDelete) => {\n  fetch('http://localhost:3000/deletelist', {\n    method: 'post',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n      list_id: listToDelete\n    })\n  })\n  .then(response => response.json())\n  .then(res => {\n    createYourListsView();\n    console.log(res);\n  })    \n  }\n  \n\n  const addNewItemToList = (listToView, entry) => {\n  fetch('http://localhost:3000/updatelist', {\n    method: 'post',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n      list_id: listToView,\n      entry: entry\n    })\n  })\n  .then(response => response.json())\n  .then(res => {\n     console.log(res);\n     createSelectedListView(listToView);\n  })  \n  };\n\n  const removeItemFromList = (listToView, entry) => {\n  fetch('http://localhost:3000/updatelist', {\n    method: 'post',\n    headers: {'Content-type': 'application/json'},\n    body: JSON.stringify({\n      list_id: listToView,\n      entry: entry,\n      deleteEntry: true\n    })\n  })\n  .then(response => response.json())\n  .then(res => {\n    console.log(res.list_entries);\n    createSelectedListView(listToView);\n  })    \n  };\n\n\n  useEffect(() => {\n    createYourListsView();\n  }, [props.user_id]);\n\n  return (\n    <Style>\n      {props.isLogged ? \n        <Container margin='0px' flexdirection='row' height='70vh'>\n          <Container flexdirection='row'>\n            <ListCard bg={'#47F7FF'}>\n              <div className='content'>\n                <p>Create new list</p>              \n              </div>\n              <div className='buttons'>\n                <Container flexdirection='column' margin='0px' padding='0px' bg='none'>\n                  <input type='text' placeholder='title' onChange={(e)=>{setNewListText(e.target.value)}} />\n                  <Button onClick={()=>{ addListToYourLists() }}>Create</Button>\n                </Container>             \n              </div>\n            </ListCard>           \n            {lists}\n          </Container>\n\n          <Container flexdirection='column' bg='transparent' padding='0px' margin='20px' width='100%'>\n          <h3>{selectedListTitle ? selectedListTitle : 'select a list'}</h3> \n          <Container flexdirection='row'>\n            <ListCard bg={'#47F7FF'}>\n              <div className='content'>                \n                <p>Add new item</p>             \n              </div>\n              <div className='buttons'>\n                {selectedListTitle.length <= 0 ? \n                <Container flexdirection='column' margin='0px' padding='0px' bg='none'>\n                  <p>Select a list first</p>\n                </Container> \n                  :\n                <Container flexdirection='column' margin='0px' padding='0px' bg='none'>\n                  <input type='text' placeholder='title' onChange={(e)=>{setNewItemText(e.target.value)}}/>\n                  <Button onClick={()=>{addNewItemToList(selectedList,newItemText)}}>Create</Button>\n                </Container>      \n                }                                     \n              </div>\n            </ListCard>           \n            {itemsInlist}\n          </Container>\n          </Container>\n\n        </Container>\n      :\n        <Redirect to='/' exact/>\n      }\n    </Style>\n  );\n}\nexport default Lists;\n"]},"metadata":{},"sourceType":"module"}